{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xF578812d6D648fc007365f780894A9c13DDd5f93",
      "txHash": "0x7b109d1d0cf394bd5665ec095feba008bb0f5a046ff111936d687343470e69bb",
      "kind": "transparent"
    },
    {
      "address": "0x1f6762F1c5191D472ABE53C344c7e3966789e8E2",
      "txHash": "0xe263dcec97641ca15ee835ad2e929b8da28c4ef6c748ae2f4bc4a6b6ee417a1c",
      "kind": "transparent"
    },
    {
      "address": "0x7B680D4372Ca2Cf8a5579A0694488e1D2A24d065",
      "txHash": "0xbd62295f128b3ecc2adff2ce1920b21a931c00d5e96df27162c88d1290093d4d",
      "kind": "transparent"
    },
    {
      "address": "0x4aff6784f9a8c63CD18aEe48550150835f2345E0",
      "txHash": "0x89c3eb749a3f89e50aff467355a65188c370c6a99449aa71cf8ff8c81462841c",
      "kind": "transparent"
    },
    {
      "address": "0x0EF0A57b3D565bbE214ae41994Bc5aD9EBAD7243",
      "txHash": "0xa2d6fe7c1ce2625abc3143ad9003f1ab53a50bc6c3c0aca22d6bfca87f3dc453",
      "kind": "transparent"
    },
    {
      "address": "0x2CCF63141DF788e7faa46a4cE215CB92A88b1420",
      "txHash": "0x1c8d7b4f3138fb201fddbb7a7b1571439c3cf6921ec52b1f6365b1e840bde25b",
      "kind": "transparent"
    },
    {
      "address": "0x9d78f67d0eC5914E499097b78d341E7476CD67B0",
      "txHash": "0xb1c5453ea42d8869ee3de4545d0b6519684a7cad5b11cb4a1384ab9c7359d8e0",
      "kind": "transparent"
    },
    {
      "address": "0x33B7cdB39fE9bFe4fA71A3C1983bDF59B1138a09",
      "txHash": "0xb90645e8e73cad648049f2fd04d0cf92d5a0c7af7ac96c40896d2c32cd530616",
      "kind": "transparent"
    },
    {
      "address": "0x12e9EEA4F9401bA1b6dE28b779cbE79042E8B847",
      "txHash": "0xd6efcf9295e3658a524dad21a408e4f9bc0df1d9d42c3367f14b1fa8609742c7",
      "kind": "transparent"
    },
    {
      "address": "0xfe2bbF579004E10926c925001068CA3E6FCE90DC",
      "txHash": "0xd8b0b12364459a575a810f090a2074ebe89f317aaa95b55b41ab09ab1af41f14",
      "kind": "transparent"
    }
  ],
  "impls": {
    "eac6ab2b0b40b9385b42b017ee908c62a64d8e36f5050151eb57ced5b8f5e18d": {
      "address": "0xEDcE759A3E009dA4C985142Eed7903B3473dF8a0",
      "txHash": "0xff18a0e083cc741fab5e67902aa1f0094b510939a01d0ab17b65f895e79140da",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "config",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IConfig)5765",
            "contract": "Base",
            "src": "contracts/Base.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)30_storage",
            "contract": "Base",
            "src": "contracts/Base.sol:65"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "31",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)4245_storage)",
            "contract": "Config",
            "src": "contracts/Config.sol:31"
          },
          {
            "label": "configMap",
            "offset": 0,
            "slot": "32",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Config",
            "src": "contracts/Config.sol:52"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)30_storage": {
            "label": "uint256[30]",
            "numberOfBytes": "960"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IConfig)5765": {
            "label": "contract IConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)4245_storage)": {
            "label": "mapping(bytes32 => struct Config.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)4245_storage": {
            "label": "struct Config.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowAll",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4f4fc929879b80169f5f527e9cb794d62c17c7f76532bfcb9e07b11dc04db6de": {
      "address": "0x4c4415C349aE7D739A605FC58BCf11dC9A3b5666",
      "txHash": "0x3afa54d74e647dd4d5cd2d07ad95135667dc34307822864912ebedd53151ef32",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "config",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IConfig)2863",
            "contract": "Base",
            "src": "contracts/Base.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)30_storage",
            "contract": "Base",
            "src": "contracts/Base.sol:65"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "31",
            "type": "t_address",
            "contract": "VeMetis",
            "src": "contracts/VeMetis.sol:10"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)90_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)30_storage": {
            "label": "uint256[30]",
            "numberOfBytes": "960"
          },
          "t_contract(IConfig)2863": {
            "label": "contract IConfig",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e1289b003848ed4e8fe20e4f0509f3c84ed26ed449da9438c75352b8b319bf13": {
      "address": "0x0CE6DA66055f141fB1617e484dDFc7f7F2360898",
      "txHash": "0x90bba7e742e6f1e3d35ffb6c8f20959823d3114b664099b0e8779a75b2bfba3e",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "config",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IConfig)4520",
            "contract": "Base",
            "src": "contracts/Base.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)30_storage",
            "contract": "Base",
            "src": "contracts/Base.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)461": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)90_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC4626Storage)183_storage": {
            "label": "struct ERC4626Upgradeable.ERC4626Storage",
            "members": [
              {
                "label": "_asset",
                "type": "t_contract(IERC20)461",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_underlyingDecimals",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_array(t_uint256)30_storage": {
            "label": "uint256[30]",
            "numberOfBytes": "960"
          },
          "t_contract(IConfig)4520": {
            "label": "contract IConfig",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC4626": [
            {
              "contract": "ERC4626Upgradeable",
              "label": "_asset",
              "type": "t_contract(IERC20)461",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:56",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Upgradeable",
              "label": "_underlyingDecimals",
              "type": "t_uint8",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:57",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "cdf637c1e5f39bc0adb25c08326ebd60f9cb73eec209306bb38b8b8ff189bd95": {
      "address": "0xe5A94a3541b844D072c3ff21d74f7D252d2ee72d",
      "txHash": "0x06f7a4327756db4a7c1f43fd37527ff25d7649688b74574ef7c538bc0f835a23",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "config",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IConfig)4520",
            "contract": "Base",
            "src": "contracts/Base.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)30_storage",
            "contract": "Base",
            "src": "contracts/Base.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)461": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)90_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC4626Storage)183_storage": {
            "label": "struct ERC4626Upgradeable.ERC4626Storage",
            "members": [
              {
                "label": "_asset",
                "type": "t_contract(IERC20)461",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_underlyingDecimals",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_array(t_uint256)30_storage": {
            "label": "uint256[30]",
            "numberOfBytes": "960"
          },
          "t_contract(IConfig)4520": {
            "label": "contract IConfig",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC4626": [
            {
              "contract": "ERC4626Upgradeable",
              "label": "_asset",
              "type": "t_contract(IERC20)461",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:56",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Upgradeable",
              "label": "_underlyingDecimals",
              "type": "t_uint8",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:57",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "8482a034261af8b02dc3a1c5f3f32a0231e6cd2d9d2a42932c7aa6f6e02d222c": {
      "address": "0x226dA5379B8b406256882093Ad4a5e0ad35A223a",
      "txHash": "0xebc2758be613a17e9dbad37d67f73814a3530393b83d70f4afc8e432cb5d85b9",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "config",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IConfig)3598",
            "contract": "Base",
            "src": "contracts/Base.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)30_storage",
            "contract": "Base",
            "src": "contracts/Base.sol:65"
          },
          {
            "label": "rewardDispatcher",
            "offset": 0,
            "slot": "31",
            "type": "t_address",
            "contract": "VeMetisMinter",
            "src": "contracts/VeMetisMinter.sol:17"
          },
          {
            "label": "veMetis",
            "offset": 0,
            "slot": "32",
            "type": "t_address",
            "contract": "VeMetisMinter",
            "src": "contracts/VeMetisMinter.sol:18"
          },
          {
            "label": "sveMetis",
            "offset": 0,
            "slot": "33",
            "type": "t_address",
            "contract": "VeMetisMinter",
            "src": "contracts/VeMetisMinter.sol:19"
          },
          {
            "label": "metis",
            "offset": 0,
            "slot": "34",
            "type": "t_address",
            "contract": "VeMetisMinter",
            "src": "contracts/VeMetisMinter.sol:20"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "35",
            "type": "t_address",
            "contract": "VeMetisMinter",
            "src": "contracts/VeMetisMinter.sol:21"
          },
          {
            "label": "crossDomainMessenger",
            "offset": 0,
            "slot": "36",
            "type": "t_address",
            "contract": "VeMetisMinter",
            "src": "contracts/VeMetisMinter.sol:22"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)30_storage": {
            "label": "uint256[30]",
            "numberOfBytes": "960"
          },
          "t_contract(IConfig)3598": {
            "label": "contract IConfig",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9d2c2d10a9bc292f9b8bd96c7b1c070e6e9d489346aff41d3955e22532d81937": {
      "address": "0xd86A60120E943A92f076A6681c094B3b227A8F25",
      "txHash": "0x8b8b3514c9da913949babc91a5eb920b49c96d750030c07bbc24e5e4b703729d",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "config",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IConfig)5765",
            "contract": "Base",
            "src": "contracts/Base.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)30_storage",
            "contract": "Base",
            "src": "contracts/Base.sol:65"
          },
          {
            "label": "metis",
            "offset": 0,
            "slot": "31",
            "type": "t_address",
            "contract": "RewardDispatcher",
            "src": "contracts/RewardDispatcher.sol:15"
          },
          {
            "label": "veMetisMinter",
            "offset": 0,
            "slot": "32",
            "type": "t_address",
            "contract": "RewardDispatcher",
            "src": "contracts/RewardDispatcher.sol:16"
          },
          {
            "label": "veMetis",
            "offset": 0,
            "slot": "33",
            "type": "t_address",
            "contract": "RewardDispatcher",
            "src": "contracts/RewardDispatcher.sol:17"
          },
          {
            "label": "sveMetis",
            "offset": 0,
            "slot": "34",
            "type": "t_address",
            "contract": "RewardDispatcher",
            "src": "contracts/RewardDispatcher.sol:18"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "35",
            "type": "t_address",
            "contract": "RewardDispatcher",
            "src": "contracts/RewardDispatcher.sol:19"
          },
          {
            "label": "crossDomainMessenger",
            "offset": 0,
            "slot": "36",
            "type": "t_address",
            "contract": "RewardDispatcher",
            "src": "contracts/RewardDispatcher.sol:20"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)30_storage": {
            "label": "uint256[30]",
            "numberOfBytes": "960"
          },
          "t_contract(IConfig)5765": {
            "label": "contract IConfig",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2bf80900165f48dbff5df621143c74d7aefdba1fd86c4c6d8e538948f77fb0fa": {
      "address": "0xF6CF86B6F02398314052D9461AAbe6d059A6DE33",
      "txHash": "0xae5fbb12e54546eafc1c302c3eda972d5fc00f712793a18c6375e769543427b5",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "config",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IConfig)4511",
            "contract": "Base",
            "src": "contracts/Base.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)30_storage",
            "contract": "Base",
            "src": "contracts/Base.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)461": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)90_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC4626Storage)183_storage": {
            "label": "struct ERC4626Upgradeable.ERC4626Storage",
            "members": [
              {
                "label": "_asset",
                "type": "t_contract(IERC20)461",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_underlyingDecimals",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_array(t_uint256)30_storage": {
            "label": "uint256[30]",
            "numberOfBytes": "960"
          },
          "t_contract(IConfig)4511": {
            "label": "contract IConfig",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC4626": [
            {
              "contract": "ERC4626Upgradeable",
              "label": "_asset",
              "type": "t_contract(IERC20)461",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:56",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Upgradeable",
              "label": "_underlyingDecimals",
              "type": "t_uint8",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:57",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "64dba4f103b4037a2dda9f2b67a034ec1d69bf95aa1d6d5a79192bb46bf53663": {
      "address": "0xde80a3bb624B1036d58Ec7D9EBB05dBfb6531F03",
      "txHash": "0x3c26db5b9d10b3bb4d230d474018d95c1763c53a650ed5fbc96ac6598c417d01",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "admin",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "NFTMinter",
            "src": "contracts/NFTMinter.sol:11"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "NFTMinter",
            "src": "contracts/NFTMinter.sol:12"
          },
          {
            "label": "mints",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_array(t_struct(mintedNft)3419_storage)dyn_storage)",
            "contract": "NFTMinter",
            "src": "contracts/NFTMinter.sol:20"
          },
          {
            "label": "eligibleAddresses",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NFTMinter",
            "src": "contracts/NFTMinter.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)108_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)246_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(mintedNft)3419_storage)dyn_storage": {
            "label": "struct NFTMinter.mintedNft[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(mintedNft)3419_storage)dyn_storage)": {
            "label": "mapping(address => struct NFTMinter.mintedNft[])",
            "numberOfBytes": "32"
          },
          "t_struct(mintedNft)3419_storage": {
            "label": "struct NFTMinter.mintedNft",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "token_id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1e056cda476ccb7bb27aeaa33c56f1aeccd38f439a0ab3a004094eb1326bd337": {
      "address": "0x0BC3F82E257b554979a2D0EF9DA077DfE9eB73b2",
      "txHash": "0xc8e310f8c2519439785519451c87aebceb2910b37d14a043b8262d35480af821",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTMinter",
            "src": "contracts/NFTMinter.sol:11"
          },
          {
            "label": "mints",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_array(t_struct(mintedNft)3417_storage)dyn_storage)",
            "contract": "NFTMinter",
            "src": "contracts/NFTMinter.sol:19"
          },
          {
            "label": "eligibleAddresses",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NFTMinter",
            "src": "contracts/NFTMinter.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)108_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)246_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(mintedNft)3417_storage)dyn_storage": {
            "label": "struct NFTMinter.mintedNft[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(mintedNft)3417_storage)dyn_storage)": {
            "label": "mapping(address => struct NFTMinter.mintedNft[])",
            "numberOfBytes": "32"
          },
          "t_struct(mintedNft)3417_storage": {
            "label": "struct NFTMinter.mintedNft",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "token_id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
